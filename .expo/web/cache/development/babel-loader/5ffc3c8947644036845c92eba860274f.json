{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\MungNguyen\\\\Desktop\\\\chuyendethaylam\\\\demo\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      jsonData: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://jsonplaceholder.typicode.com/posts/1', {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          jsonData: json.body\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          paddingTop: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, this.state.jsonData));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n;\nvar colors = {\n  themeColor: \"#ffc66a\",\n  white: \"#fff\",\n  background: \"#f4f6fc\",\n  greyish: \"a5a5a5\"\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n    paddingHorizontal: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/MungNguyen/Desktop/chuyendethaylam/demo/App.js"],"names":["StatusBar","React","useState","useEffect","MaterialCommunityIcons","App","state","jsonData","fetch","method","then","response","json","setState","body","catch","error","console","paddingTop","Component","colors","themeColor","white","background","greyish","styles","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;AAEA,SAAQC,sBAAR,QAAqC,oBAArC;;IACsBC,G;;;;;;;;;;;;;;;UAEtBC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;WAGN,6BAAoB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,QAAAA,MAAM,EAAE;AAD4C,OAAjD,CAAL,CAGGC,IAHH,CAGQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAHhB,EAIGF,IAJH,CAIQ,UAAAE,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AACZN,UAAAA,QAAQ,EAAEK,IAAI,CAACE;AADH,SAAd;AAGD,OARH,EASGC,KATH,CASS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAXH;AAYD;;;WACD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKZ,KAAL,CAAWC,QAAlB,CADF,CADF;AAKD;;;;EAzB+BN,KAAK,CAACkB,S;;SAAlBd,G;AA0BrB;AAGD,IAAMe,MAAM,GAAC;AACXC,EAAAA,UAAU,EAAC,SADA;AAEXC,EAAAA,KAAK,EAAC,MAFK;AAGXC,EAAAA,UAAU,EAAC,SAHA;AAIXC,EAAAA,OAAO,EAAC;AAJG,CAAb;AASE,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAEV,MAAM,CAACG,UAFf;AAGTQ,IAAAA,iBAAiB,EAAC;AAHT;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator, SafeAreaView, FlatList,Image, Dimensions } from 'react-native';\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\"\nexport  default class App extends React.Component{\n\nstate = {\n    jsonData: '',\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1', {\n      method: 'GET',\n    })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          jsonData: json.body,\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n  render() {\n    return (\n      <View style={{ paddingTop: 30 }}>\n        <Text>{this.state.jsonData}</Text>\n      </View>\n    );\n  }\n};\n\n\nconst colors={\n  themeColor:\"#ffc66a\",\n  white:\"#fff\",\n  background:\"#f4f6fc\",\n  greyish:\"a5a5a5\"\n};\n\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: colors.background,\n      paddingHorizontal:8\n\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}